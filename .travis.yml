language: c
sudo: required

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "o1Gatu7TwkfWYzmUht2+N5S7dhxUjcajFBT3cRoj3xXH0ghCZ2Yyu+yRDakYujIXb1waUMiwNdPQOxjEbo/2oLRoV3E29wi6bZWhO7RBymM6zHTEoGY7F2XXYOxWlVeU2x4TrYS7UWgosCK1Hi3A0nOnvbMQFfV8F5R0RouKJvM="
    - COVERITY_SCAN_BRANCH_PATTERN="(master|coverity.*)"
    - COVERITY_SCAN_NOTIFICATION_EMAIL="Michal.Trojnara@stunnel.org"
    - COVERITY_SCAN_BUILD_COMMAND="make"
    - COVERITY_SCAN_PROJECT_NAME="$TRAVIS_REPO_SLUG"
    - SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)
  matrix:
    - OPENSSL="OpenSSL_1_0_2-stable"
    - OPENSSL="OpenSSL_1_1_0-stable"
    - OPENSSL="OpenSSL_1_1_1-stable"

compiler:
  - gcc
  - clang

os:
  - linux

matrix:
  include:
    - os: linux
      compiler: gcc
      env: DO_COVERITY_SCAN=yes

install:
  - ./.travis.sh

before_script:
  - touch config.rpath && autoreconf -fvi && ./configure ${CONFIG_FLAGS}
  # Optionally try to upload to Coverity Scan
  # On error (propably quota is exhausted), just continue
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - if [ -n "${DO_COVERITY_SCAN}" ]; then curl -s 'https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh' | bash || true; fi
  - openssl version -a

script:
  - if [ -z "${DO_COVERITY_SCAN}" ]; then
      make && make check && make dist;
    fi

after_failure:
  - cat tests/test-suite.log
