name: CI

on:
  push:
  pull_request:

env:
  version: libp11-0.4.13_git

jobs:
  unix-build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
          - os: ubuntu-20.04
          - os: ubuntu-18.04
          - os: macOS-latest
            openssl: openssl@3
          - os: macOS-latest
            openssl: openssl@1.1

    runs-on: ${{matrix.os}}

    env:
      PKG_CONFIG_PATH: /usr/local/opt/${{matrix.openssl}}/lib/pkgconfig

    steps:
    - uses: actions/checkout@v3

    - name: Install apt dependencies (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get install -y libssl-dev opensc softhsm

    - name: Install brew dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install automake ${{matrix.openssl}} opensc softhsm
        echo "/usr/local/opt/openssl/bin" >> $GITHUB_PATH

    - name: System information
      run: |
        openssl version -a
        echo "PATH=$PATH"

    - name: Bootstrap
      run: autoreconf --verbose --install --force

    - name: Configure
      run: ./configure

    - name: Build
      run: make

    - name: Test
      timeout-minutes: 5
      run: make check

    - name: Results of failed tests
      if: failure()
      run: cat tests/test-suite.log || true

  windows-build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            choco_param: --x86
            build_for: WIN32
            openssl_dir: C:\Program Files (x86)\OpenSSL-Win32
          - arch: x64
            build_for: WIN64
            openssl_dir: C:\Program Files\OpenSSL-Win64

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure Visual Studio
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{matrix.arch}}

    - name: Install Chocolatey dependencies
      run: choco install ${{matrix.choco_param}} -y openssl

    - name: Build
      run: nmake -f Makefile.mak
        BUILD_FOR=${{matrix.build_for}}
        OPENSSL_DIR="${{matrix.openssl_dir}}"

    - name: Upload the DLLs
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.version}}-openssl-1.1.1-${{matrix.arch}}
        path: ${{github.workspace}}/src/*.dll
