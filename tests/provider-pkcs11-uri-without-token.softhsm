#!/bin/bash

# Copyright © 2024 Mobi - Com Polska Sp. z o.o.
# Author: Małgorzata Olszówka <Malgorzata.Olszowka@stunnel.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

# This test checks if it is possible to use the keys without specifying the
# token if there is only one initialized token available.

outdir="output.$$"

# Load common test functions
. ${srcdir}/common.sh

# These URIs don't contain the token specification
PRIVATE_KEY="pkcs11:object=server-key-0;type=private;pin-value=${PIN}"
PUBLIC_KEY="pkcs11:object=server-key-0;type=public"
CERTIFICATE="pkcs11:object=server-key-0;type=cert"

if [[ "${OPENSSL_VERSION}" =~ ^[012].* ]]; then
	echo "Skipping test with OpenSSL ${OPENSSL_VERSION}"
	exit 77
fi

# Do the token initialization
init_token "rsa" "1" "libp11" ${ID} "server-key" "privkey" "pubkey" "cert"

# Ensure the use of the locally built provider; applies after running 'pkcs11-tool'
unset OPENSSL_ENGINES
export OPENSSL_MODULES="../src/.libs/"
export PKCS11_MODULE_PATH=${MODULE}
echo "OPENSSL_MODULES=${OPENSSL_MODULES}"
echo "PKCS11_MODULE_PATH=${PKCS11_MODULE_PATH}"

# Create input file
echo "secret" >"${outdir}/in.txt"

# Load openssl settings
TEMP_LD_LIBRARY_PATH=${LD_LIBRARY_PATH}
. ${srcdir}/openssl-settings.sh

# Run the test
# Generate signature without specifying the token in the PKCS#11 URI
${WRAPPER} ${OPENSSL} pkeyutl -provider pkcs11prov -provider default \
	-inkey ${PRIVATE_KEY} -sign -out "${outdir}/signature.bin" \
	-in "${outdir}/in.txt"
if [[ $? -ne 0 ]]; then
	echo "Failed to generate signature using PKCS#11 URI ${PRIVATE_KEY}"
	exit 1
fi

# Verify the signature using the public without specifying the token
${OPENSSL} pkeyutl -provider pkcs11prov -provider default -pubin \
	-inkey ${PUBLIC_KEY} -verify -sigfile "${outdir}/signature.bin" \
	-in "${outdir}/in.txt"
if [[ $? -ne 0 ]]; then
	echo "Failed to verify signature using PKCS#11 URI ${PUBLIC_KEY}"
	exit 1
fi

# Verify the signature using a certificate without specifying the token
${OPENSSL} pkeyutl -provider pkcs11prov -provider default -certin \
	-inkey ${PUBLIC_KEY} -verify -sigfile "${outdir}/signature.bin" \
	-in "${outdir}/in.txt"
if [[ $? -ne 0 ]]; then
	echo "Failed to verify signature using PKCS#11 URI ${PUBLIC_KEY}"
	exit 1
fi

# Restore settings
export LD_LIBRARY_PATH=${TEMP_LD_LIBRARY_PATH}

rm -rf "$outdir"

exit 0
